[
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Payment Entry",
  "modified": "2020-12-09 21:05:02.184797",
  "name": "Payment Entry-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "// function series(frm){\n//     var mode = frm.doc.payment_type;\n//     console.log(\"mode-->\",mode);\n//         if (mode ===\"Receive\"){\n//             var crv = \"CRV-.YYYY.-\";\n//             frm.set_value('naming_series',crv);\n//         }\n//         else{\n//             var cpv = \"CPV-.YYYY.-\";\n//             frm.set_value('naming_series',cpv);\n//             // if (mode == \"Pay\"){\n// //               frappe.call({\n// // \t\t    method: \"frappe.client.get\",\n// // \t\t    args:{\n// // \t\t        \"doctype\":\"Purchase Invoice\",\n// // \t\t        \"name\": frappe.inv\n// // \t\t    },\n// // \t\t    callback(r){\n// // \t\t        console.log(r.message)\n// // \t\t        var cl = r.message;\n// // \t\t        if (mode ===\"Pay\"){\n// // \t\t            console.log(cl.withholding_receipt_no, \"with holding no\")\n// // \t\t           frm.set_value('withholding_receipt_no',cl.withholding_receipt_no); \n// // \t\t        } \n\t\t        \n// // \t\t    }\n// // \t\t}) \n//             // }\n//         }\n   \n// }\n\n\n\n\n\n\n// frappe.ui.form.on('Payment Entry', {\n// \tpayment_type:function(frm) {\n\t    \n// \t\tseries(frm)\n// \t\trefresh_field(\"naming_series\");\n// \t} \n// })\n\n// frappe.ui.form.on('Payment Entry', {\n// \trefresh: function(frm) {\n//         series(frm)\n// \t\trefresh_field(\"naming_series\");\n// \t\tfrm.fields_dict['payment_accounts_section'].collapse(1);\n// \t\tfrm.fields_dict['section_break_12'].collapse(1);\n// \t\trefresh_field('payment_accounts_section');\n// \t\trefresh_field('section_break_12');\n\t\t\n\t\t\n\n\t\t\n// \t\t}\n// })"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Salary Structure Assignment",
  "modified": "2020-12-12 19:29:11.013178",
  "name": "Salary Structure Assignment-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Salary Structure Assignment', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\temployee(frm){\n\t  frappe.db.get_value('Employee', frm.doc.employee, 'grade')\n        .then(r => {\n        console.log(r.message.grade)\n        if (r.message.grade){\n            console.log('hello')\n            frappe.db.get_value('Employee Grade', r.message.grade, 'base_amount')\n            .then(r => {\n                console.log(r.message.base_amount)\n                frm.set_value('base', r.message.base_amount)\n             })\n            frappe.db.get_value('Employee Grade', r.message.grade, 'default_salary_structure')\n            .then(r => {\n                frm.set_value('salary_structure', r.message.default_salary_structure)\n             }) \n             \n\n        }\n    })\n  \n\t},\n\tbase(frm){\n        frm.set_value('salary_in_usd', frm.doc.base)\n        frappe.call({\n            \"method\": \"ethal.utils.set_conversion_rate\",\n            \"args\": {\n                employee: frm.doc.employee\n            }\n        })\n        .success(success => {\n            console.log(success)\n            frm.set_value('salary_in_birr', success.message*frm.doc.base)\n        })\n\t}\n})"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Employee",
  "modified": "2020-12-11 13:02:10.420669",
  "name": "Employee-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Employee', {\n\tbefore_save(frm) {\n\t\t// your code here\n\t\tif(cur_frm.doc.employee_prerequisite === undefined || cur_frm.doc.employee_prerequisite.length != '3'){\n\t\t    frappe.throw('Please Upload Mendatory Documents')\n\t\t}\n\t},\n// \trefresh(frm){\n// \t    if(!cur_frm.doc.__islocal){\n// \t        if(cur_frm.doc.warnings.length == 3){\n// \t            frappe.call({\n// \t        \"method\": \"ethal.utils.send_notification\",\n// \t\t\t\"args\": {\n// \t\t\t\t'doc': frm.doc\n// \t\t\t},\n// \t\t\tcallback: function(r){\n// \t\t\t\tconsole.log(r.message)\n\t\t\n\t\t\t\t\n// \t\t\t}\n// \t\t})\n// \t        }\n// \t    }\n// \t}\n})\n"
 },
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Salary Structure",
  "modified": "2020-12-14 13:02:25.124318",
  "name": "Salary Structure-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on('Salary Structure', {\n\trefresh(frm) {\n\t\t// your code here\n\t\t\tfrm.remove_custom_button('Assign to Employees')\n\t\t\tfrm.add_custom_button('Assign Employees', () => {\n\t\t\t    var d = new frappe.ui.Dialog({\n\t\t\t        \n\t\t\ttitle: __(\"Assign to Employees\"),\n\t\t\tfields: [\n\t\t\t\t{fieldname: \"sec_break\", fieldtype: \"Section Break\", label: __(\"Filter Employees By (Optional)\")},\n\t\t\t\t{fieldname: \"company\", fieldtype: \"Link\", options: \"Company\", label: __(\"Company\"), default: frm.doc.company, read_only:1},\n\t\t\t\t{fieldname: \"grade\", fieldtype: \"Link\", options: \"Employee Grade\", label: __(\"Employee Grade\"), change: () => {\n\t\t\t\t\t\t\n\t\t\t\t    frappe.db.get_value('Employee Grade', d.get_value('grade'), 'base_amount')\n                    .then(r => {\n                        console.log(r.message) // Open\n                        d.set_value('base', r.message.base_amount)\n                    })\n\n\t\t\t\t}},\n\t\t\t\t{fieldname:'department', fieldtype:'Link', options: 'Department', label: __('Department')},\n\t\t\t\t{fieldname:'designation', fieldtype:'Link', options: 'Designation', label: __('Designation')},\n                {fieldname:\"employee\", fieldtype: \"Link\", options: \"Employee\", label: __(\"Employee\")},\n\t\t\t\t{fieldname:'base_variable', fieldtype:'Section Break'},\n\t\t\t\t{fieldname:'from_date', fieldtype:'Date', label: __('From Date'), \"reqd\": 1},\n\t\t\t\t{fieldname:'income_tax_slab', fieldtype:'Link', label: __('Income Tax Slab'), options: 'Income Tax Slab'},\n\t\t\t\t{fieldname:'base_col_br', fieldtype:'Column Break'},\n\t\t\t\t{fieldname:'base', fieldtype:'Currency', label: __('Base'), read_only: 1}\n\t\t\t],\n\t\t\tprimary_action: function() {\n\t\t\t  console.log(d.get_value('grade'))\n\t\t\t\tvar data = d.get_values();\n\t\t\t\tdata['doc'] = frm.doc\n\t\t\t\tconsole.log(data)\n\t\t\t\tfrappe.call({\n\t\t\t\t\n\t\t\t\t\tmethod: \"ethal.utils.assign_salary_structure\",\n\t\t\t\t\targs: data,\n\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t\tfrm.reload_doc();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tprimary_action_label: __('Assign')\n\t\t});\n\n\n\t\td.show();\n\t})\n\t}\n})"
 }
]